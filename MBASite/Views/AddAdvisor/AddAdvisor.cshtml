@model MBASite.ViewModels.AdvisorData

@{
    ViewBag.Title = "AddAdvisor";
}

<h2>AddAdvisor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AdvisorData</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                    @Html.LabelFor(model => model.Concentration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-9">
                       @Html.DropDownListFor(m => m.Concentration,@MBASite.Helpers.StaticVariables.Programs.AsEnumerable())
                       @Html.ValidationMessageFor(model => model.Concentration, "", new { @class = "text-danger" })
                    </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-1 col-sm-9">
                &nbsp;&nbsp;&nbsp; &nbsp; @Html.LabelFor(m => m.Status, new { @class = "login-label" })

                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Active @Html.RadioButtonFor(m => m.Status, true)
                &nbsp;Inactive @Html.RadioButtonFor(m => m.Status, 0)
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
