@model MBASite.ViewModels.StudentAdvisingData

@{
    ViewBag.Title = "EditStudentAdvising";
}

<h2>Edit Student</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student Advising Data</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Concentration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Concentration, "", new { @class = "text-danger" })
                @Html.DropDownListFor(model => model.Concentration, new SelectList(MBASite.Helpers.StaticVariables.Programs, "Name", "Name", Model.Concentration), " ", new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Advisor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Advisor, new SelectList(MBASite.Helpers.StaticVariables.AdvisorDetails, "Id", "FirstName", Model.Advisor), " ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Advisor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.approvedForGraduation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.approvedForGraduation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.approvedForGraduation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProgramStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-9">
                @Html.DropDownListFor(model => model.ProgramStatus, new SelectList(MBASite.Helpers.StaticVariables.AcademicStatuses, "AcademicStatus", "AcademicStatus",Model.ProgramStatus), " ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgramStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-offset-4 col-md-10">
            <input type="submit" value="Save Data" class="btn btn-default" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", MBASite.Helpers.StaticVariables.Role, "Home")
</div>

